basic shortbus events:

Event: create ($postback)

Does: create a new queue and an id for it and send that id back to the client

Postback args: $status ('OK', ???), $new_queue_id


Event: post ($postback, $queue_id, $message_body)

Does: Adds the message to the end of the queue and sends the event id so created to the client

Postback args: $status ('OK', 'no such queue', ???), $message_id_in_queue


Event: destroy ($postback, $queue_id)

Does: destroys the selected queue

Postback args: $status ('OK', 'no such queue', ???)


Event: connect ($postback, $queue_id, $listener)

Does: Adds $listener as the listener for this queue

Postback args: $status ('OK', 'no such queue', 'queue already has listener', ???)


Event: disconnect ($postback, $queue_id)

Does: Disconnects the listener for this queue

Postback args: $status ('OK', 'no such queue', 'no listener to disconnect', ???)


Event: acknowledge ($postback, $queue_id, $message_id)

Does: Tells shortbus the specified $message_id and all before have been received and can be cleared from the queue

Postback args: $status ('OK', 'no such queue', 'event_id too low', 'event_id too high', ???)



When a $listener is connected to the queue, SB will call it sequentially with all messages in the queue -

$listener->($queue_id, $message_id, $message_body)

and then make the same call on post as each message enters the queue, until either (a) the queue is destroyed or (b) the listener disconnects


Stuff we'll need later:

- Max queue length
- Event expiry from queue?
- Queue expiry
- Listener windowing (or some way for the listener to say "oi, stop sending stuff a minute")
- Event priorities?
- Delivery reports back to original sender
